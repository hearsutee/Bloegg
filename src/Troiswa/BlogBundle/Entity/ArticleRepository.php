<?php

namespace Troiswa\BlogBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{
    public function findAllByDateDesc()
    {
        return $this->getEntityManager()->createQuery('SELECT a FROM TroiswaBlogBundle:Article a ORDER BY a.dateCreation DESC')->getResult();
    }


    public function countArticles()
    {
       return $this->getEntityManager()->createQuery('SELECT COUNT(a) FROM TroiswaBlogBundle:Article a ')->getSingleScalarResult();




    }

    public function findSeveral(array $ids)
    {
        return $this->getEntityManager()->createQuery('SELECT a FROM TroiswaBlogBundle:Article a where a.id IN (:ids)')->setParameter('ids',$ids)->setMaxResults(3)->getResult();
    }

    public function findOne($id)
    {
        return $this->getEntityManager()->createQuery('SELECT a FROM TroiswaBlogBundle:Article a where a.id =:id')->setParameter('id',$id)->getSingleResult();

    }



    public function findPhareArticles(array $valeurs = NULL)
    {

 //
        if(!is_null($valeurs))
//        est similaire a
//          if($valeurs !== NULL)
//        if($valeurs)
//        if(!empty($valeurs))
        {
            // si on rentre des ids en argument:
            // onfait une requete avec les ids
            return $this->getEntityManager()->createQuery('SELECT a FROM TroiswaBlogBundle:Article a where a.id = ')->getResult();
        }
        else
        {
            // si on en rentre pas:
            // onfait une requete par rapport au booleen cover
            return $this->getEntityManager()->createQuery('SELECT a FROM TroiswaBlogBundle:Article a where a.cover = 1')->getResult();
        }
    }


}

